/**
 \color #6b4
 \radius 2
 */
element Init : CellContent {
  Unsigned(12) counter;
  typedef EMMTypes.TreeID TreeID;
  CellUtils cu;
  
  @Override Void specialBehavior(TransitionSelf & ts){
    for(SiteNum i = 1; ew.isAccessible(i); ++i){
      Atom a = ew[i];
      if(a as Empty){
        TreeFactory tf;
        which(){
          case(counter == 0u):
          {
            ew[i] = tf.createRandomRoot((TreeID) 0);
            ++counter;
          }
          case(counter == 1u):
          {
            ew[i] = tf.createRandomRoot((TreeID) 1);
            ++counter;
          }
          case(counter == 2u):
          {
            ew[i] = tf.createRandomRoot((TreeID) 2);
            ++counter;
          }
          case(counter == 3u):
          {
            ew[i] = tf.createRandomRoot((TreeID) 3);
            ++counter;
          }
          case(counter == 4u):
          {
            ew[i] = tf.createRandomID();
            ++counter;
          }
          case(counter >= 5u && counter < 1000u):
          {
	    if(r.oneIn(counter)){
              EInit ei;
	      cu.putInEmpty(ei.atomof);
	    }
	    ++counter;
          }
	  case(counter == 1000u):
	  {
            ts.die();
          }
        }
      }
    }
  }
}