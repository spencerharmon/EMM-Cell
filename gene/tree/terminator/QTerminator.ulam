/*
  
 */
quark QTerminator : QTree{
  typedef QTree.TreeID TreeID;
  typedef QTree.GeneID GeneID;
  virtual Void specialTerminatorBehavior();
  virtual Atom terminatorCreate(TreeID t, GeneID g, TreeID new);
  virtual Atom terminatorCreate(TreeID t, GeneID g);
  
  Atom createRandom(TreeID t, GeneID g, TreeID new){
    //we have to keep track of the terminator types here.
    Unsigned terminatorTypes = 2; //zero-base?
    Unsigned roll = r.create(terminatorTypes);
    which(roll){
      case(0u):
      {
        Value v;
        return v.terminatorCreate(t, g);
      }
      case(1u):
      {
        ComIn c;
        return c.terminatorCreate(t, g);
      }
      case(2u):
      {
        VarRef v;
        return v.terminatorCreate(t, g, new);
      }
    }
  }
  
  @Override Void specialTreeBehavior(){
    specialTerminatorBehavior();
  }

}