/**
 Empty root element.
 \color #940
 \radius 2
 */
element Root : QRoot {
  //data members
  TreeID treeID;
  GeneID tree0;
  GeneID tree1;
  OperatorType op;
  StoredValue value;

  OperatorUtils ou;

  @Override TreeID getTreeID(){
    return treeID;
  }
  @Override StoredValue getStoredValue(){
    return value;
  }
  @Override GeneID getTree0(){
    return tree0;
  }
  @Override GeneID getTree1(){
    return tree1;
  }
  @Override OperatorType getOp(){
    return op;
  }
  @Override Void specialRootBehavior(TransitionSelf & ts){
    Direction aDirection;
    Movement aMovement;
    ComOut aComOut;

    if(self.getTreeID() == aDirection.treeID){
      aDirection.value = self.getStoredValue();
      aDirection.tree0 = self.getTree0();
      aDirection.tree1 = self.getTree1();
      aDirection.op = self.getOp();
      ts.changeSelf(aDirection.atomof);
    }else if(self.getTreeID() == aMovement.treeID){
      aMovement.value = self.getStoredValue();
      aMovement.tree0 = self.getTree0();
      aMovement.tree1 = self.getTree1();
      aMovement.op = self.getOp();
      ts.changeSelf(aMovement.atomof);
    }else if(self.getTreeID() == aComOut.treeID){
      aComOut.value = self.getStoredValue();
      aComOut.tree0 = self.getTree0();
      aComOut.tree1 = self.getTree1();
      aComOut.op = self.getOp();
      ts.changeSelf(aComOut.atomof);
    }
    value = ou.doOperate(tree0, tree1, op, treeID, value);
  }
}