/**
 \color #940
 \radius 2
 */
element Direction : QRoot {
  //data members
  constant TreeID treeID = 1u;
  GeneID tree0;
  GeneID tree1;
  OperatorType op;
  StoredValue value;

  OperatorUtils ou;

  @Override TreeID getTreeID(){
    return treeID;
  }
  @Override StoredValue getStoredValue(){
    return value;
  }
  @Override GeneID getTree0(){
    return tree0;
  }
  @Override GeneID getTree1(){
    return tree1;
  }
  @Override OperatorType getOp(){
    return op;
  }
  @Override Void specialRootBehavior(TransitionSelf & ts){
    //one eighth of max value
    //plus one because it's not an integer.
    StoredValue egth = (StoredValue) (egth.maxof/8u) + 1u;    

    Bool setBreak = false;
    for(Unsigned count = 0u; count <= 7u && !setBreak; ++count){
      StoredValue upperBound = (StoredValue) ((count + 1u) * egth);
      if(upperBound >= value){
	EPreSymmetry eps;
	eps.symmetry = (Symmetry) count;
	cell.putInEmpty(eps.atomof);
	setBreak = true;
      }
    }
    value = ou.doOperate(tree0, tree1, op, treeID, value);
  }
}