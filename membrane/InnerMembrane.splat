= element InnerMembrane isa QMembrane
\symbol IM
\color #6789ab
\symmetries all

== Data Members
u typedef EventWindow.SiteNum SiteNum;
u XTimer(4,15,1) watchdog;


== Rule1 (increment watchdog timer )
check @ {
.   InnerMembrane & slf = (InnerMembrane&) ew[0];
.   slf.watchdog.count();
.   // return false allows evaluateRuleSets to continue to process further rules
.   // 
.   return false;
. }

 @ -> .

== Rule2 (propagate reset)
vote i isa InnerMembrane{
.   if($self.watchdog.time == 0u){
.     return (Votes) 1;
.   }else{
.     return (Votes) 0;
.   }
. }
check @ {
.   if($i.$nvotes > 0u){
.     InnerMembrane & slf = (InnerMembrane&) ew[0];
.     InnerMembrane neighbor = (InnerMembrane) ew[$i.$winsn];
.     if(slf.watchdog.time > 2){
.       slf.watchdog.time = 0;
.     }
.   }
.   return false;
. }

 iii    iii
 i@i -> i.i
 iii    iii

== Rule3 (watchdog fault detection)
vote e isa Empty
check @ {
.   InnerMembrane slf = (InnerMembrane) ew[0];
.   if(slf.watchdog.alarm() && $e.$nvotes > 0u){
.     EDeath ed;
.     ew[$e.$winsn] = ed.atomof;
.   }
.   return false;
. } 

 @e -> .e

== Rule 3 (scan for bonding)
vote b isa EBonding
check @ {
.   InnerMembrane& me = (InnerMembrane&) ew[0];
.   me.bonding = false;
.
.   if ( $b.$nvotes > 0u ){
.     Atom a = ew[$b.$winsn];
.     if( a as EBonding) {
.       me.bonding = true;
.     }
.   }
.   return false;
. }

    b          .
   bbb        ...
  bbbbb      .....
 bbi@ibb -> ...@...
  bbbbb      .....
   bbb        ...
    b          .