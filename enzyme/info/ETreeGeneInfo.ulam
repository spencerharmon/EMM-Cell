/**
 \color #f93
 \radius 2
 */
element ETreeGeneInfo : QEnzyme {
  typedef EMMTypes.GeneID GeneID;
  typedef EMMTypes.TreeID TreeID;
  
  Bool geneIDInUse[GeneID.maxof];
  TreeID treeID;

  @Override Bool isAMatch(Atom a){
    if(a as ETreeGeneInfo){
      if(a.treeID == treeID){
        return true;
      }else{
        return false;
      }
    }
    return false;
  }
  Void propagateTreeMeta(){
    for(SiteNum i = 1; ew.isAccessible(i); ++i){
      //update our own meta for whatever relevant tree atoms we can see.
      Atom & a = ew[i];
      if(a as QNonRootTree){
        if(a.getTreeID() == treeID){
          geneIDInUse[a.getGeneID()] = true;
	}
      }else if(a as ETreeGeneInfo){
        if(a.treeID == treeID){
          //propagate information to others of our type..
          for(Unsigned i = 0; i < TreeID.maxof; ++i){
            if(a.geneIDInUse[i] && a.treeID == treeID){
    	      geneIDInUse[i] = true;
    	    }else if(geneIDInUse[i] && a.treeID == treeID){
    	      a.geneIDInUse[i] = true;
	    }
    	  }
	}
      }
    }
  }
  @Override Void specialEnzymeBehavior(TransitionSelf & ts){
    propagateTreeMeta();
  }
}