/**
Initial tree generation and point mutations occur through EGrow
process.
 \radius 2
 */

element EGrow : QGrow {
  typedef EMMTypes.TreeID TreeID;
  typedef EMMTypes.GeneID GeneID;

  TreeFactory tf;
  
  TreeID treeID;
  GeneID geneID;
  Bool isRoot;
  Once o;

  @Override TreeID getTargetTreeID(){
    return treeID;
  }
  @Override GeneID getTargetGeneID(){
    return geneID;
  }
  @Override Bool getTargetIsRoot(){
    return isRoot;
  }

  TreeID newtree(SiteNum slot){
    if(ew.isAccessible(slot) && slot != (SiteNum) 0){
      Atom & a = ew[slot];
      if(a as ERootInformation){
        for(TreeID t = 0; t < TreeID.maxof; ++t){
          if(!a.treeIDInUse[t]){
            //maybe setting is useful?
  	  //The tree doesn't really exist yet, and it won't if we fail,
  	  // but at least this announces our intention to create one here.
            a.treeIDInUse[t] = true;
            return (TreeID) t;
          }
        }
      }
    }
    return (TreeID) 0;
  }
  
  GeneID newgene(SiteNum slot){
    if(ew.isAccessible(slot) && slot != (SiteNum) 0){
      Atom & a = ew[slot];
      if(a as ETreeGeneInfo){
        if(a.treeID == treeID){
	  //todo: index out-of-bounds if greater-than-or-equal-to. why?
          for(GeneID g = 0; g < GeneID.maxof; ++g){
            if(a.geneIDInUse[g]){
              //subsequent calls return next available.
              a.geneIDInUse[g] = true;
              return g;
            }
          }
        }
      }
    }
    return (GeneID) 0;
  }
  SiteNum getRootInfo(){
    for(SiteNum i = 1; ew.isAccessible(i); ++i){
      Atom & a = ew[i];
      if(a as ERootInformation){
        return i;
      }
    }
    //last resort
    return (SiteNum) 0;
  }
  
  SiteNum getTreeGeneInfo(){
    for(SiteNum i = 1; ew.isAccessible(i); ++i){
      Atom & a = ew[i];
      if(a as ETreeGeneInfo){
        return i;
      }
    }
    //last resort
    return (SiteNum) 0;
  }

  @Override Void specialEnzymeBehavior(){
    if(o.new()){
      ERootInformation eri;
      cell.putInEmpty(eri.atomof);
    }
    if(isRoot){
      SiteNum rootInfoSlot = getRootInfo();
      if(rootInfoSlot != (SiteNum) 0){
        ew[0] = tf.createRandomRoot(newtree(rootInfoSlot));
      }
    }else{
      SiteNum rootInfoSlot = getRootInfo();
      SiteNum treeInfoSlot = getTreeGeneInfo();
      if(rootInfoSlot != (SiteNum) 0 && treeInfoSlot != (SiteNum) 0){
        Atom n = tf.grow(treeID, geneID, newgene(treeInfoSlot), newgene(treeInfoSlot), newtree(rootInfoSlot));
	du.print("!!!!!!!!!!!!!!!!!!!!!NEW GENE!!!!!!!!!!!!!!!!!!!!!!");
        du.print(n);
        ew[0] = n;
      }
    }
  }
}