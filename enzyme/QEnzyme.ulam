/**
  \symmetries all
  \color #b94
 */
quark QEnzyme : CellContent{

  typedef EventWindow.SiteNum SiteNum;
  typedef WindowScanner.Category Category;

  XTimer(3,7,1) age;

  virtual Void specialEnzymeBehavior();

  //given the sitenum of a supposed qenzyme, compare to our age and return the youngest.
  Atom younger(SiteNum slot){
  /*
    Atom a = ew[slot];
    if(a as QGene){
      if(a.age.time == age.time){
        return self.atomof;
      }else if(a.age.time > age.time){
        return self.atomof;
      }else if(a.age.time < age.time){
        return a.atomof;
      }
    }else{
      return self.atomof;
    }
  */
    return self.atomof;  
  }

  Bool versionOrDensityChanges(){
    //
    // use windowscanner to move a little closer to seeing only one of our type.
    // also, make sure that everyone is on the newest version (lowest age) of our type
    //
    // returns true if we've changed ew[0].
    //
    //safe to assume we're ew[0] here?
    ElementType type = au.getValidType(ew[0]);

    WindowScanner ws;
    SiteVisitorByType sv;

    Category cat = ws.allocateCategory();

    sv.setType(cat,type);
    ws.scan(sv);
    
    SiteNum winsn = ws.getSiteNum(cat);
    Atom winatm = younger(winsn);

    if(ws.getHits(cat) == 0u){
       //we're alone; copy ourselves to an empty, if possible.
       Category cEmpty = ws.allocateCategory();
       Empty e;
       ElementType tEmpty = au.getValidType(e);
       sv.setType(cEmpty,tEmpty);

       ws.scan(sv);
       if(ws.getHits(cEmpty) > 0u){
         ew[ws.getSiteNum(cEmpty)] = self.atomof;
       }
       return false;
    }else if(ws.getHits(cat) == 1u){
      //there is one other of our type visible. this is the desired amount, but make sure 
      //that both slots have the newest version.
      ew[ws.getSiteNum(cat)] = winatm;
    }else if(ws.getHits(cat) > 1u){
      //there are too many..
      Empty e;
      ew[ws.getSiteNum(cat)] = e.atomof;
    }
    //if we're not the newest version, change ew[0] and return true
    if(winatm as QEnzyme){
      if(winatm.age.time < age.time){
        ew[0] = ew[winsn];
        return true;
      }else{
        return false;
      }
    }
  }

  @Override Void specialBehavior(){
    if(age.countAlarm()){
      die();
      return;
    }

    Bool selfHasChanged = versionOrDensityChanges();
    if(!selfHasChanged){
      //if an enzyme has any special behavior, make sure only the newest versions get to take any action.
      specialEnzymeBehavior();
    }
  }

}
